version: '1'
services:
  db:
    image: postgres
    container_name: db
    environment:
      - POSTGRES_USER=root
      - POSTGRES_DB=django
      - POSTGRES_PASSWORD=django
    restart: always
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - chaintify

  ipfs:
    image: lscr.io/linuxserver/ipfs
    container_name: ipfs
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    volumes:
      - ./data/ipfs:/config
    ports:
      # - 80:80
      # - 443:443 #optional
      - 4001:4001
      - 5001:5001
      - 8080:8080

    restart: always
    networks:
      - chaintify

  server:
    build:
      context: ./chaintify-server
    container_name: server
    # ports:
    #   - 8000:8000
    command: gunicorn app.wsgi:application --bind 0.0.0.0:8000 --workers=1 --reload
    volumes:
      - ./chaintify-server/app:/code
    tty: true
    restart: always
    depends_on:
      - ipfs
      - db
    networks:
      - chaintify

  web:
    build:
      context: ./chaintify-webapp
      dockerfile: Dockerfile.prod
    container_name: web
    # ports:
    #   - 80:80
    command: yarn start -p 80
    tty: true
    restart: always
    depends_on:
      - server
    networks:
      - chaintify

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - 8000:8000
      - 80:80
      - 443:443
    expose:
      - 8000
    volumes:
      - ./config/nginx/conf.d:/etc/nginx/conf.d
      - ./chaintify-server/app/static:/static
      - ./chaintify-server/app/media:/media

      - /etc/letsencrypt/live/chaintify.space-0001:/etc/nginx/ssl/chaintify.space
      - /etc/letsencrypt/live/api.chaintify.space:/etc/nginx/ssl/api.chaintify.space
    restart: always
    depends_on:
      - web
      - server
    networks:
      - chaintify

networks:
  chaintify:
    driver: bridge

# docker compose run server python manage.py migrate
# docker compose run server python manage.py createsuperuser 
# docker compose run server python manage.py collectstatic

# sudo ufw allow 80/tcp0
# sudo ufw allow 8080/tcp
# sudo ufw allow 8000/tcp
# sudo ufw allow 3000/tcp
# sudo ufw allow 443/tcp

# https://docs.docker.com/engine/install/debian/
# https://github.com/duysy/chaintify.git
# git submodule update --init --recursive
# git submodule update --recursive
# git submodule update --remote --merge
# docker compose -f docker-compose.prod.yaml up web

# docker stop $(docker ps -aq)
# docker rm $(docker ps -aq)
# docker rmi $(docker images -q)
# docker system prune -a


# sudo apt-get update
# sudo apt-get install certbot
# sudo certbot certonly --standalone --preferred-challenges http -d chaintify.space
# sudo certbot certonly --standalone --preferred-challenges http -d api.chaintify.space

# config path ssl
#update cross server , config server and webapp , foldel media
